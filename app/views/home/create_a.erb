<%= render :partial => "/home/navbar" %>

<div class="content-section-a">
    <div class="container" style="margin-top: 40px">

        <div class="row">
            <div class="col s12 m12 l12 ">
                <div class="card">

                    <div class="card-image">
                        <nav>
                            <div class="nav-wrapper cyan darken-4">
                                <div class="col s12">
                                    <a class="breadcrumb">1단계</a>
                                </div>
                            </div>
                        </nav>

                        <div class="col s12 m12 l12">
                          <div class="card-content">
                            <div class = "card blue-grey lighten-5">
                              <div class = "card-content">
                                <p class="card-title">
                                  <h4>이용안내</h4>
                                </p>
                                <div class = "divider"></div>
                                <blockquote>
                                  루미뷰는 해당 장소에 거주했던 후기를 남기고 공유하는 서비스입니다.
                                  <br />
                                  리뷰 작성시 객관적 사실과 실제 경험을 토대로 작성해주세요.
                                  <br />
                                  비방, 욕설, 허위 사실이 포함된 리뷰는 금지 및 삭제 됩니다.[정보통신법 제 70조 제1항]
                                  <br />
                                </blockquote>
                              </div>
                            </div>
                            <br />
                            <p class="card-title">
                                <h4>위치등록</h4>
                            </p>
                            <div class="divider"></div>
                            <p class="card-title">
                                <h5>위치</h5>
                            </p>
                            <blockquote>
                                기록하실 방의 위치를 지도에서 선택하거나, 검색 버튼을 눌러 검색하세요.
                            </blockquote>
                            <a class = "btn-flat waves-effect waves-teal teal-text" onclick="sample5_execDaumPostcode()"><i class="Tiny material-icons left">search</i>주소검색</a>
                            <div id="map" style="width: 100%; height: 400px;">
                              <p id="centerAddr"></p>
                            </div>
                            <div class = "divider"></div>

                          </div>
                        </div>

                    </div>

                    <form action="/home/list_path_a" method="POST">
                      <div class=  "container">
                        <div class="form-group">
                          <label for="address">
                            <h6>주소</h6>
                          </label>
                          <input type="text" name="total_address" class="form-control" id="total_address" placeholder="지도에서 클릭해주세요." required readonly>
                          <input type="hidden" name="parcel_address" class="form-control" id="parcel_address" required readonly>
                          <input type="hidden" name="road_address" class="form-control" id="road_address" readonly>
                          <label for="detail_address">
                            <h6>건물 이름</h6>
                          </label>
                          <input type="text" name="detail_address" class="form-control" id="detail_address" placeholder="세부 주소를 입력해주세요." autocomplete="off" required>
                          <span class = "red-text" style = "font-size:0.8rem">[주의! 몇 호인지는 입력하지마세요!]</span>
                          <input type="hidden" name="current_user" value="<%= current_user.email %>">
                          <textarea type="text" name="marker1" class="form-control" id="marker1" style="resize: none; display: none;" required readonly rows="1"></textarea>
                          <textarea type="text" name="marker2" class="form-control" id="marker2" style="resize: none; display: none;" required readonly rows="1"></textarea>
                        </div>
                      </div>



                        <div class="card-action">
                            <!--건물 이름-->
                            <div class="center-align">
                                <a href="/home/index" class="btn btn-default">취소하기</a>
                                <input class="btn btn-default" type="submit" value="다음단계">
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<%= render :partial => "/home/footer" %>

<!--지도 이벤트-->
<script>
    var mapContainer = document.getElementById('map'), // 지도를 표시할 div
        mapOption = {
            center: new daum.maps.LatLng(36.363626, 127.347757), // 지도의 중심좌표
            level: 2 // 지도의 확대 레벨
        };

    // 지도를 생성합니다
    var map = new daum.maps.Map(mapContainer, mapOption);

    var mapTypeControl = new daum.maps.MapTypeControl();

    // 지도에 컨트롤을 추가해야 지도위에 표시됩니다 daum.maps.ControlPosition은 컨트롤이 표시될 위치를 정의하는데 TOPRIGHT는 오른쪽 위를 의미합니다
    map.addControl(mapTypeControl, daum.maps.ControlPosition.TOPRIGHT);

    // 지도 확대 축소를 제어할 수 있는  줌 컨트롤을 생성합니다
    var zoomControl = new daum.maps.ZoomControl();
    map.addControl(zoomControl, daum.maps.ControlPosition.RIGHT);

    // 주소-좌표 변환 객체를 생성합니다
    var geocoder = new daum.maps.services.Geocoder();

    var marker = new daum.maps.Marker(), // 클릭한 위치를 표시할 마커입니다
        infowindow = new daum.maps.InfoWindow({zindex: 1}); // 클릭한 위치에 대한 주소를 표시할 인포윈도우입니다


    // 현재 지도 중심좌표로 주소를 검색해서 지도 좌측 상단에 표시합니다
    searchAddrFromCoords(map.getCenter(), displayCenterInfo);

    // 지도를 클릭했을 때 클릭 위치 좌표에 대한 주소정보를 표시하도록 이벤트를 등록합니다
    daum.maps.event.addListener(map, 'click', function (mouseEvent) {
        searchDetailAddrFromCoords(mouseEvent.latLng, function (status, result) {
            if (status === daum.maps.services.Status.OK) {
                var detailAddr = !!result[0].roadAddress.name
                    ? '<div>도로명주소 : ' + result[0].roadAddress.name + '</div>'
                    : '';
                detailAddr += '<div>지번 주소 : ' + result[0].jibunAddress.name + '</div>';

                if (result[0].roadAddress.name == "") {
                    var total_address = result[0].jibunAddress.name;
                    var parcel_address = result[0].jibunAddress.name;
                    var road_address = "";
                }
                else {
                    var total_address = result[0].jibunAddress.name + " (" + result[0].roadAddress.name + ")";
                    var parcel_address = result[0].jibunAddress.name;
                    var road_address = result[0].roadAddress.name;
                }

                $('input[name=total_address]').attr('value', total_address);
                $('input[name=parcel_address]').attr('value', parcel_address);
                $('input[name=road_address]').attr('value', road_address);

                var content = '<div class="bAddr">' + detailAddr + '</div>';

                // 마커를 클릭한 위치에 표시합니다
                marker.setPosition(mouseEvent.latLng);
                marker.setMap(map);

                // 인포윈도우에 클릭한 위치에 대한 법정동 상세 주소정보를 표시합니다
                infowindow.setContent(content);
                infowindow.open(map, marker);

                // 클릭한 위도, 경도 정보를 가져옵니다
                var latlng = mouseEvent.latLng;

                var marker1 = latlng.getLat();
                var marker2 = latlng.getLng();

                document.getElementById('marker1').innerHTML = marker1;
                document.getElementById('marker2').innerHTML = marker2;
            }
        });
    });

    // 중심 좌표나 확대 수준이 변경됐을 때 지도 중심 좌표에 대한 주소 정보를 표시하도록 이벤트를 등록합니다
    daum.maps.event.addListener(map, 'idle', function () {
        searchAddrFromCoords(map.getCenter(), displayCenterInfo);
    });

    function searchAddrFromCoords(coords, callback) {
        // 좌표로 행정동 주소 정보를 요청합니다
        geocoder.coord2addr(coords, callback);
    }

    function searchDetailAddrFromCoords(coords, callback) {
        // 좌표로 법정동 상세 주소 정보를 요청합니다
        geocoder.coord2detailaddr(coords, callback);
    }

    // 지도 좌측상단에 지도 중심좌표에 대한 주소정보를 표출하는 함수입니다
    function displayCenterInfo(status, result) {
        if (status === daum.maps.services.Status.OK) {
            var infoDiv = document.getElementById('centerAddr');
            $('#map').ready(function () {
                infoDiv.innerHTML = result[0].fullName;
            });
        }
    }

// <!--우편번호 검색-->

    function sample5_execDaumPostcode() {
          new daum.Postcode({
               oncomplete: function(data) {
                   // 각 주소의 노출 규칙에 따라 주소를 조합한다.
                   // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
                   var fullAddr = data.jibunAddress; // 최종 주소 변수
                   var extraAddr = ''; // 조합형 주소 변수
                   autoJibunAddress = true;
                   // 기본 주소가 도로명 타입일때 조합한다.
                  // if(data.addressType === 'R'){
                  //     //법정동명이 있을 경우 추가한다.
                  //     if(data.bname !== ''){
                  //         extraAddr += data.bname;
                  //     }
                  //     // 건물명이 있을 경우 추가한다.
                  //     if(data.buildingName !== ''){
                  //         extraAddr += (extraAddr !== '' ? ', ' + data.buildingName : data.buildingName);
                  //     }
                  //     // 조합형주소의 유무에 따라 양쪽에 괄호를 추가하여 최종 주소를 만든다.
                  //     fullAddr += (extraAddr !== '' ? ' ('+ extraAddr +')' : '');
                  // }

                   // 주소 정보를 해당 필드에 넣는다.
                   var total_address = fullAddr + "(" + data.roadAddress + ")";
                   $('input[name=total_address]').attr('value', total_address);
                   $('input[name=parcel_address]').attr('value', data.jibunAddress);
                   $('input[name=road_address]').attr('value', data.roadAddress);

                   // 주소로 좌표를 검색
                   geocoder.addr2coord(data.address, function(status, result) {
                       // 정상적으로 검색이 완료됐으면
                       if (status === daum.maps.services.Status.OK) {
                           // 해당 주소에 대한 좌표를 받아서
                           var coords = new daum.maps.LatLng(result.addr[0].lat, result.addr[0].lng);

                           // 지도를 보여준다.
                           map.relayout();
                           // 지도 중심을 변경한다.
                           map.setCenter(coords);
                           // 마커를 결과값으로 받은 위치로 옮긴다.
                           marker.setPosition(coords);
                           marker.setMap(map);

                           var marker1 = result.addr[0].lat;
                           var marker2 = result.addr[0].lng;

                           document.getElementById('marker1').innerHTML = marker1;
                           document.getElementById('marker2').innerHTML = marker2;



                       }
                   });

               }
           }).open();
       }
</script>

<!--취소하기 버튼-->
<script>
    function go_to_home() {
        history.back();
    }
</script>

<!-- Modal Structure -->
<div id="agreemodal" class="modal modal-fixed-footer">
  <div class="modal-content">
    <h4>Modal Header</h4>
    <p>A bunch of text</p>
  </div>
  <div class="modal-footer">
    <a href="#!" class="modal-action modal-close waves-effect waves-green btn-flat ">Agree</a>
  </div>
</div>


<script>
$('.modal-trigger').leanModal({
  dismissible: false, // Modal can be dismissed by clicking outside of the modal
  opacity: .5, // Opacity of modal background
  in_duration: 300, // Transition in duration
  out_duration: 200, // Transition out duration
  starting_top: '4%', // Starting top style attribute
  ending_top: '10%', // Ending top style attribute
  ready: function() { alert('Ready'); }, // Callback for Modal open
  complete: function() { alert('Closed'); } // Callback for Modal close
}
);
</script>

<!--detail_address textarea 엔터키 제한-->
<!--<script>-->
<!--    $('#detail_address').keydown(function () {-->
<!--        var rows = $('#detail_address').val().split('\n').length;-->
<!--        var maxRows = 1;-->
<!--        if (rows > maxRows) {-->
<!--            alert("한줄로 입력해주세요.");-->
<!--            modifiedText = $('#detail_address').val().split("\n").slice(0, maxRows);-->
<!--            $('#detail_address').val(modifiedText.join("\n"));-->
<!--        }-->
<!--    });-->
<!--</script>-->
