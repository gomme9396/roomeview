<%= render :partial => "/home/navbar" %>

  <div class="fixed-action-btn" style="bottom: 45px; right: 24px;">
    <a class="btn-floating btn-large red accent-4 tooltipped" data-position="left" data-delay="50" data-tooltip="리뷰쓰기" href = "/review/create">
      <i class="large material-icons">mode_edit</i>
    </a>
  </div>
    <!--<div class="container" style="margin-top: 40px">-->
  <div class = "container">

    <br /><br />
    <div class = "row">
      <div class = "row">
        <div class="input-field col s12 m4 l4">
          <select>
            <option value="1">Option 1</option>
            <option value="2">Option 2</option>
            <option value="3">Option 3</option>
          </select>
          <label>Materialize Select</label>
        </div>
      </div>
      <div class = "col s12 m12 l12">
        <div class = "card">
            <div id="map" style="width: 100%; height: 800px;"></div>
          </div>
        </div>
      </div>
    </div>
  </div>


    <%= render :partial => "/home/footer" %>





  <!--지도 이벤트-->

  <script>
    var mapContainer = document.getElementById('map'), // 지도를 표시할 div
        mapOption = {
            center: new daum.maps.LatLng(36.363626, 127.347757), // 지도의 중심좌표
            level: 2 // 지도의 확대 레벨
        };
    // 지도를 생성합니다
    var map = new daum.maps.Map(mapContainer, mapOption);

    // 클러스터 생성
    var clusterer = new daum.maps.MarkerClusterer({
        map: map, // 마커들을 클러스터로 관리하고 표시할 지도 객체
        averageCenter: true, // 클러스터에 포함된 마커들의 평균 위치를 클러스터 마커 위치로 설정
        minLevel: 10 // 클러스터 할 최소 지도 레벨
    });


    // 마커를 표시할 위치와 title 객체 배열입니다
    var positions = [];
    var parcel_address = [];
    var road_address = [];
    var detail_address = [];
    var review_id = [];




    <% @review.each do |a| %>
      if (parcel_address.includes("<%= a.parcel_address %>") == false) {
        positions.push({title: "<%= a.parcel_address %>", latlng: new daum.maps.LatLng(<%= a.marker1 %>, <%= a.marker2 %>)})
        parcel_address.push("<%= a.parcel_address %>");
        road_address.push("<%= a.road_address %>");
        detail_address.push("<%=a.detail_address %>");
        review_id.push("<%=a.id %>");
      }
    <% end %>

    var overlay_arr = new Array();
    var marker_arr = new Array();


    // 마커 이미지의 이미지 주소입니다
    var imageSrc = "<%= image_path "map_marker.png" %>";

    for (var i = 0; i < positions.length; i ++) {
      (function(i) {
        // 마커 이미지의 이미지 크기 입니다
        var imageSize = new daum.maps.Size(24, 35);

        // 마커 이미지를 생성합니다
        var markerImage = new daum.maps.MarkerImage(imageSrc, imageSize);

        // 마커를 생성합니다
        var marker = new daum.maps.Marker({
            map: map, // 마커를 표시할 지도
            position: positions[i].latlng, // 마커를 표시할 위치
            title : positions[i].title, // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다
            image : markerImage // 마커 이미지
        });

        marker_arr.push(marker);


        // 커스텀 오버레이에 표시할 컨텐츠 입니다
        // 커스텀 오버레이는 아래와 같이 사용자가 자유롭게 컨텐츠를 구성하고 이벤트를 제어할 수 있기 때문에
        // 별도의 이벤트 메소드를 제공하지 않습니다
        var content = '<div class="wrap">' +
                    '    <div class="info">' +
                    '        <div class="title">' + detail_address[i] +
                    '            <div class="close" onclick="closeOverlay(' + i + ')" title="닫기"></div>' +
                    '        </div>' +
                    '        <div class="body">' +
                    // '            <div class="img">' +
                    // '                <img src="http://cfile181.uf.daum.net/image/250649365602043421936D" width="73" height="70">' +
                    // '           </div>' +
                    '            <div class="desc">' +
                    '                <div class="ellipsis">지번 : ' + parcel_address[i] + '</div>' +
                    '                <div class="jibun ellipsis">도로명 : ' + road_address[i] + '</div>' +
                    '                <div class = "teal-text" onclick="button_function(' + i + ')">리뷰보기' +
                    '            </div>' +
                    '        </div>' +
                    '    </div>' +
                    '</div>';

        // 마커 위에 커스텀오버레이를 표시합니다
        // 마커를 중심으로 커스텀 오버레이를 표시하기위해 CSS를 이용해 위치를 설정했습니다
        var overlay = new daum.maps.CustomOverlay({
            content: content,
            map: map,
            position: positions[i].latlng
        });

        overlay_arr.push(overlay);

        // 마커를 클릭했을 때 커스텀 오버레이를 표시합니다
        daum.maps.event.addListener(marker_arr[i], 'click', function() {
            overlay_arr[i].setMap(map);
        });

        overlay_arr[i].setMap(null);

        daum.maps.event.addListener(overlay_arr[i], 'click', function() {
			      overlay_arr[i].setMap(null);
			  });

      })(i);

    }



    for (var i = 0; i < positions.length; i ++) {
      function button_function(i) {
          $('input[name=find_address]').attr('value', parcel_address[i]);
          location.replace("/review/review_front/" + parcel_address[i]);
      }
    }

    function closeOverlay(number) {
		    overlay_arr[number].setMap(null);
		}

    var mapTypeControl = new daum.maps.MapTypeControl();
    // 지도에 컨트롤을 추가해야 지도위에 표시됩니다 daum.maps.ControlPosition은 컨트롤이 표시될 위치를 정의하는데 TOPRIGHT는 오른쪽 위를 의미합니다
    map.addControl(mapTypeControl, daum.maps.ControlPosition.TOPRIGHT);
    // 지도 확대 축소를 제어할 수 있는  줌 컨트롤을 생성합니다
    var zoomControl = new daum.maps.ZoomControl();
    map.addControl(zoomControl, daum.maps.ControlPosition.RIGHT);
    // 주소-좌표 변환 객체를 생성합니다
    var geocoder = new daum.maps.services.Geocoder();
    // 현재 지도 중심좌표로 주소를 검색해서 지도 좌측 상단에 표시합니다
    searchAddrFromCoords(map.getCenter(), displayCenterInfo);



    // 중심 좌표나 확대 수준이 변경됐을 때 지도 중심 좌표에 대한 주소 정보를 표시하도록 이벤트를 등록합니다
    daum.maps.event.addListener(map, 'idle', function () {
        searchAddrFromCoords(map.getCenter(), displayCenterInfo);
    });

    function searchAddrFromCoords(coords, callback) {
        // 좌표로 행정동 주소 정보를 요청합니다
        geocoder.coord2addr(coords, callback);
    }
    function searchDetailAddrFromCoords(coords, callback) {
        // 좌표로 법정동 상세 주소 정보를 요청합니다
        geocoder.coord2detailaddr(coords, callback);
    }
    // 지도 좌측상단에 지도 중심좌표에 대한 주소정보를 표출하는 함수입니다
    function displayCenterInfo(status, result) {
        if (status === daum.maps.services.Status.OK) {
            var infoDiv = document.getElementById('centerAddr');
            $('#map').ready(function () {
                infoDiv.innerHTML = result[0].fullName;
            });
        }
    }

    $(document).ready(function() {
       $('select').material_select();
     });

</script>
